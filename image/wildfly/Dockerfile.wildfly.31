ARG TAG=mosaicgreifswald/zulujre:21
FROM ${TAG}

# ###license-information-start###
# The MOSAIC-Project - WildFly with MySQL-Connector and Healthcheck
# __
# Copyright (C) 2009 - 2024 Institute for Community Medicine
# University Medicine of Greifswald - mosaic-project@uni-greifswald.de
# __
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
# ###license-information-end###

MAINTAINER Ronny Schuldt <ronny.schuldt@uni-greifswald.de>

# variables
ARG DATE_YMD="20240305"
ARG MAVEN_REPOSITORY="https://repo1.maven.org/maven2"
ARG SKIP_VULNERABILITIES_FIX="false"

ARG WILDFLY_VERSION="31.0.1.Final"
ARG WILDFLY_DOWNLOAD_URL="https://github.com/wildfly/wildfly/releases/download/${WILDFLY_VERSION}/wildfly-${WILDFLY_VERSION}.tar.gz"
ARG WILDFLY_SHA256="d5b0d9490f22d9e5f509794470c773a7147301b512fd2db9315991340f2b562d"

ARG MYSQL_CONNECTOR_VERSION="8.3.0"
ARG MYSQL_CONNECTOR_DOWNLOAD_URL="https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-j-${MYSQL_CONNECTOR_VERSION}.tar.gz"
ARG MYSQL_CONNECTOR_SHA256="94e7fa815370cdcefed915db7f53f88445fac110f8c3818392b992ec9ee6d295"

ARG ECLIPSELINK_VERSION="4.0.2"
ARG ECLIPSELINK_DOWNLOAD_URL="${MAVEN_REPOSITORY}/org/eclipse/persistence/eclipselink/${ECLIPSELINK_VERSION}/eclipselink-${ECLIPSELINK_VERSION}.jar"
ARG ECLIPSELINK_PATH="modules/system/layers/base/org/eclipse/persistence/main"
ARG ECLIPSELINK_SHA256="58b9dfdcc6d239217b4b9b10c5b0ee997661d228ddb6b43f4096355073108529"

ENV WILDFLY_HOME="${HOME}/wildfly" \
    WF_MARKERFILES="auto" \
    WF_ADMIN_USER="admin" \
    WF_DEBUG="false" \
    DEBUG_PORT="*:8787" \
    JBOSS_CLI="${HOME}/wildfly/bin/jboss-cli.sh" \
    LAUNCH_JBOSS_IN_BACKGROUND="true" \
    LOG4J_FORMAT_MSG_NO_LOOKUPS="true" \
    \
    ENTRY_WILDFLY_CLI="/entrypoint-wildfly-cli" \
    ENTRY_WILDFLY_DEPLOYS="/entrypoint-wildfly-deployments" \
    ENTRY_WILDFLY_ADDINS="/entrypoint-wildfly-addins" \
    ENTRY_WILDFLY_LOGS="/entrypoint-wildfly-logs"

# annotations
LABEL maintainer="ronny.schuldt@uni-greifswald.de" \
      org.opencontainers.image.authors="university-medicine greifswald" \
      org.opencontainers.image.source="https://hub.docker.com/repository/docker/mosaicgreifswald/wildfly" \
      org.opencontainers.image.version="31-${DATE_YMD}" \
      org.opencontainers.image.vendor="uni-greifswald.de" \
      org.opencontainers.image.title="mosaic-wildfly" \
      org.opencontainers.image.license="AGPLv3" \
      org.opencontainers.image.description="This is a Docker image for the Java application server WildFly. The image is based on slim debian-image and prepared for the tools of the university medicine greifswald (but can also be used for other similar projects)."

# create folders and permissions
USER root
COPY ["scripts", "${WILDFLY_HOME}"]
COPY ["help-and-usage", "${ENTRY_USAGE}/"]
COPY ["README*.md", "${ENTRY_USAGE}/layer-readme/"]
RUN cd ${MOS_TEMP_PATH} && \
    echo "> 1. install system-updates" && \
    apt-get update && \
    apt-get upgrade && \
    \
    echo "> 2. create folders and permissions" && \
    mkdir -p ${ENTRY_WILDFLY_CLI} ${ENTRY_WILDFLY_DEPLOYS} ${ENTRY_LOGS}/wildfly && \
    chmod go+w ${ENTRY_WILDFLY_CLI} ${ENTRY_WILDFLY_DEPLOYS} ${ENTRY_LOGS}/wildfly && \
    chown ${USER}:${USER} -R ${ENTRY_WILDFLY_CLI} ${ENTRY_WILDFLY_DEPLOYS} ${ENTRY_LOGS}/wildfly && \
    \
    echo "> 3. install wildfly" && \
    (curl -Lfo wildfly.tar.gz ${WILDFLY_DOWNLOAD_URL} || (>&2 /bin/echo -e "\ncurl -Lso wildfly.tar.gz ${WILDFLY_DOWNLOAD_URL}\n" && exit 1))  && \
    (sha256sum wildfly.tar.gz | grep -q ${WILDFLY_SHA256} || (>&2 echo "sha256sum failed $(sha256sum wildfly.tar.gz)" && exit 1)) && \
    tar xf wildfly.tar.gz && \
    cp -R wildfly-${WILDFLY_VERSION}/* ${WILDFLY_HOME}/ && \
    mkdir -p ${WILDFLY_HOME}/standalone/log && touch ${WILDFLY_HOME}/standalone/log/server.log && \
    chown -R ${USER}:${USER} ${WILDFLY_HOME} && chmod -R g+rw ${WILDFLY_HOME} && \
    \
	echo -n "> 4. update vulnerable java-libraries" && \
    ([ "${SKIP_VULNERABILITIES_FIX}" = "true" ] && echo " (skipped)" || (echo && \
    I=0 && ( \
        # format: base-download-url jar-base-name jar-new-version(optional) \
        echo "${MAVEN_REPOSITORY}/org/apache/james/apache-mime4j-core apache-mime4j-core 0.8.10"; \
    ) | while read -r URL NAME VERSION; do UPDATED="false" && \
       I=`expr $I + 1` && OLD_JARS=$(find /opt/ -type f -name "${NAME}-[0-9]*.*ar") && \
       if [ "x${OLD_JARS}" = "x" ]; then echo "  > $I. ${NAME} not found" && continue; fi && \
       for OLD_JAR in ${OLD_JARS}; do \
           if [ "x" = "x${VERSION}" ]; then \
               VERSION=$(curl -LfSs ${URL} | grep -E ">[0-9]\.[-a-zA-Z0-9\.]+/<" | sort -Vuk2 | tail -n1 | sed -r "s/^.+>([0-9]\.[-a-zA-Z0-9\.]+).+$/\1/"); \
           fi && \
           echo -n ">> $I. ${OLD_JAR} > ${VERSION} > " && \
           OLD_VERSION=$(echo ${OLD_JAR} | rev | cut -d'-' -f1 | rev | sed 's/.jar//') && \
           if [ "${OLD_VERSION}" = "${VERSION}" ]; then echo "same version" && continue; fi && \
           JAR_FILE="${NAME}-${VERSION}.jar" && \
           curl -Lfso $(dirname "${OLD_JAR}")/${JAR_FILE} "${URL}/${VERSION}/${JAR_FILE}" && \
           if [ -f "$(dirname "${OLD_JAR}")/module.xml" ]; then \
               sed -r "s/${NAME}\-[0-9]+.+\.jar/${JAR_FILE}/" -i $(dirname "${OLD_JAR}")/module.xml; \
           fi && \
           rm -f ${OLD_JAR} && \
           UPDATED="true" && echo "ok" || echo "failed"; \
       done ; \
       ([ "true" = "${UPDATED}" ] || echo "        nothing to update for ${NAME}") ; \
    done)) && \
    \
    echo "> 5. get mysql-connector " && \
    (curl -Lfo mysql-connector-java.tar.gz ${MYSQL_CONNECTOR_DOWNLOAD_URL} || (>&2 /bin/echo -e "\ncurl -Lfo mysql-connector-java.tar.gz ${MYSQL_CONNECTOR_DOWNLOAD_URL}\n" && exit 1))  && \
    tar xf mysql-connector-java.tar.gz && \
    mv mysql-connector-j-*/mysql*jar ./mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.jar && \
    (sha256sum mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.jar | grep -q ${MYSQL_CONNECTOR_SHA256} || (>&2 echo "sha256sum failed $(sha256sum mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.jar)" && exit 1)) && \
    \
    echo "> 6. get eclipselink " && \
    (curl -Lfo ${WILDFLY_HOME}/${ECLIPSELINK_PATH}/eclipselink-${ECLIPSELINK_VERSION}.jar ${ECLIPSELINK_DOWNLOAD_URL} || (>&2 /bin/echo -e "\ncurl -Lfo ${WILDFLY_HOME}/${ECLIPSELINK_PATH}/eclipselink-${ECLIPSELINK_VERSION}.jar ${ECLIPSELINK_DOWNLOAD_URL}\n" && exit 1))  && \
    (sha256sum ${WILDFLY_HOME}/${ECLIPSELINK_PATH}/eclipselink-${ECLIPSELINK_VERSION}.jar | grep -q ${ECLIPSELINK_SHA256} || (>&2 echo "sha256sum failed $(sha256sum ${WILDFLY_HOME}/${ECLIPSELINK_PATH}/eclipselink-${ECLIPSELINK_VERSION}.jar)" && exit 1)) && \
    sed -i "s/<\/resources>/    <resource-root path=\"eclipselink-${ECLIPSELINK_VERSION}.jar\"\/>\n    <\/resources>/;\
        s/<\/dependencies>/    <module name=\"java.rmi\"\/>\n        <module name=\"java.desktop\"\/>\n        <module name=\"java.xml\"\/>\n    <\/dependencies>/" ${WILDFLY_HOME}/${ECLIPSELINK_PATH}/module.xml && \
    chown -R ${USER}:${USER} ${WILDFLY_HOME}/${ECLIPSELINK_PATH} && \
    \
    echo "> 8. prepare wildfly" && \
    (${WILDFLY_HOME}/bin/standalone.sh &) && \
    START=$(date +%s) && \
    TIMEOUT=30 && \
    (until `/bin/bash ${WILDFLY_HOME}/wildfly_started.sh`;do sleep 1;SEC=$(($(date +%s)-START));if [ ${SEC} -ge $TIMEOUT ];then exit 1;fi;done) && \
    ($JBOSS_CLI -c "module add --name=com.mysql --resources=${MOS_TEMP_PATH}/mysql-connector-java-${MYSQL_CONNECTOR_VERSION}.jar --dependencies=javax.api\,javax.transaction.api" || exit 1) && \
    ($JBOSS_CLI -c "/subsystem=datasources/jdbc-driver=mysql:add(driver-name=mysql,driver-module-name=com.mysql,driver-class-name=com.mysql.cj.jdbc.Driver)" || exit 1) && \
    ($JBOSS_CLI -c "/subsystem=deployment-scanner/scanner=default:write-attribute(name=scan-enabled,value=false)" || exit 1) && \
    ($JBOSS_CLI -c "/subsystem=deployment-scanner/scanner=entrypoint:add(scan-interval=5000,path=${ENTRY_WILDFLY_DEPLOYS})" || exit 1) && \
    echo -n "true" > ${MOS_READY_PATH}/markerfiles_mode && \
    ($JBOSS_CLI -c "/extension=org.wildfly.extension.microprofile.health-smallrye:add" || exit 1) && \
    ($JBOSS_CLI -c "/subsystem=microprofile-health-smallrye:add" || exit 1) && \
    ($JBOSS_CLI -c "/subsystem=undertow/server=default-server/ajp-listener=myListener:add(socket-binding=ajp, scheme=http, enabled=true)" || exit 1) && \
    ($JBOSS_CLI -c ":shutdown" || exit 1) && \
    \
    echo "> 9. register wildfly" && \
    register \
      --os-updated \
      --add-version="WildFly:${WILDFLY_VERSION}" \
      --add-version="MySQL-Connector:${MYSQL_CONNECTOR_VERSION}" \
      --add-version="EclipseLink:\$(ls ${WILDFLY_HOME}/${ECLIPSELINK_PATH}/eclipselink-* | sed -r 's/^.+-([0-9\.]+)\.jar$/\1/' | cat)" \
      --add-entrypoint="ENTRY_WILDFLY_CLI:${ENTRY_WILDFLY_CLI}" \
      --add-entrypoint="ENTRY_WILDFLY_DEPLOYS:${ENTRY_WILDFLY_DEPLOYS}" \
      --add-entrypoint="ENTRY_WILDFLY_ADDINS:${ENTRY_WILDFLY_ADDINS}" \
      --add-entrypoint="ENTRY_WILDFLY_LOGS:${ENTRY_WILDFLY_LOGS}" \
      --add-healthcheck-script="${WILDFLY_HOME}/healthcheck_wildfly.sh" \
      --add-run-script="20:service:${WILDFLY_HOME}/run_wildfly.sh:${WILDFLY_HOME}/wildfly_started.sh" && \
    \
    echo "  |____ 7. cleanup" && \
    apt-get clean && \
    apt-get autoclean && \
    apt-get autoremove && \
    mkdir ${WILDFLY_HOME}/standalone/data/addins && \
    ln -s ${ENTRY_LOGS}/wildfly ${ENTRY_WILDFLY_LOGS} && \
    ln -s ${WILDFLY_HOME}/standalone/data/addins ${ENTRY_WILDFLY_ADDINS} && \
    chown ${USER}:${USER} -R ${HOME} ${ENTRY_LOGS} ${ENTRY_WILDFLY_ADDINS} ${ENTRY_WILDFLY_LOGS} ${WILDFLY_HOME}/standalone/log/* ${ENTRY_USAGE} && \
    chmod u+x -R ${HOME}/**/*.sh && \
    rm -rf ${MOS_TEMP_PATH}/* ${WILDFLY_HOME}/standalone/configuration/standalone_xml_history/current/* /var/lib/apt/lists/* /var/cache/apt/*

USER ${USER}

# ports
EXPOSE 8009 8080 9990 8443 9993 8787
